===>  After terraform init you will get like this:

root@ip-172-31-14-52:/home/ubuntu/terra# terraform init
Initializing the backend...
Initializing provider plugins...
- Finding latest version of hashicorp/aws...
- Installing hashicorp/aws v5.99.1...
- Installed hashicorp/aws v5.99.1 (signed by HashiCorp)
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.



===> terraform plugin convert your code into API
/home/ubuntu/terra/.terraform/providers/registry.terraform.io/hashicorp/aws


===> terraform validate: 
root@ip-172-31-14-52:/home/ubuntu/terra# terrform validate
Command 'terrform' not found, did you mean:
  command 'terraform' from snap terraform (1.12.1)
See 'snap info <snapname>' for additional versions.
root@ip-172-31-14-52:/home/ubuntu/terra# terraform validate
Success! The configuration is valid.


===> terraform plan :
root@ip-172-31-14-52:/home/ubuntu/terra# terraform plan

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_instance.instance1 will be created
  + resource "aws_instance" "instance1" {
      + ami                                  = "ami-0e386fa0b67b8b12c"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t3.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags_all                             = (known after apply)
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

====> after running terraform apply the output is like this
aws_instance.instance1: Creating...
aws_instance.instance1: Still creating... [00m10s elapsed]
aws_instance.instance1: Creation complete after 13s [id=i-0595f9c32521d6dff]

* To connect this machine, you must modify the inbound rules to permit SSH port 22 in the default security group.


===> after executing terraform apply 
.terraform ---------------------->Plugins Download------------------------->This plugins code convert the code into API
.terraform.lock.hcl
ec2.tf ----------------------->our Code
provider.tf ------------------>Our Code
terraform.tfstate ---------------------> A Single Source of Truth for Terraform in this file have A to Z have our terraform and non editable



===> If you manually change the instance type from t3.micro to t3.nano and then execute <code>terraform plan</code>, it will display a message like this.
root@ip-172-31-14-52:/home/ubuntu/terra# terraform plan
aws_instance.instance1: Refreshing state... [id=i-0595f9c32521d6dff]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # aws_instance.instance1 will be updated in-place
  ~ resource "aws_instance" "instance1" {
        id                                   = "i-0595f9c32521d6dff"
      ~ instance_type                        = "t3.nano" -> "t3.micro"
      ~ public_dns                           = "ec2-40-192-119-17.ap-south-2.compute.amazonaws.com" -> (known after apply)
      ~ public_ip                            = "40.192.119.17" -> (known after apply)
        tags                                 = {}
        # (36 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }


=====> After running terraform apply it will change the instance type

root@ip-172-31-14-52:/home/ubuntu/terra# terraform apply --auto-approve
aws_instance.instance1: Refreshing state... [id=i-0595f9c32521d6dff]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # aws_instance.instance1 will be updated in-place
  ~ resource "aws_instance" "instance1" {
        id                                   = "i-0595f9c32521d6dff"
      ~ instance_type                        = "t3.nano" -> "t3.micro"
      ~ public_dns                           = "ec2-40-192-119-17.ap-south-2.compute.amazonaws.com" -> (known after apply)
      ~ public_ip                            = "40.192.119.17" -> (known after apply)
        tags                                 = {}
        # (36 unchanged attributes hidden)

        # (8 unchanged blocks hidden)
    }

Plan: 0 to add, 1 to change, 0 to destroy.
aws_instance.instance1: Modifying... [id=i-0595f9c32521d6dff]
aws_instance.instance1: Still modifying... [id=i-0595f9c32521d6dff, 00m10s elapsed]
aws_instance.instance1: Still modifying... [id=i-0595f9c32521d6dff, 00m20s elapsed]
aws_instance.instance1: Still modifying... [id=i-0595f9c32521d6dff, 00m30s elapsed]
aws_instance.instance1: Still modifying... [id=i-0595f9c32521d6dff, 00m40s elapsed]
aws_instance.instance1: Still modifying... [id=i-0595f9c32521d6dff, 00m50s elapsed]
aws_instance.instance1: Still modifying... [id=i-0595f9c32521d6dff, 01m00s elapsed]
aws_instance.instance1: Modifications complete after 1m1s [id=i-0595f9c32521d6dff]



====> After running the terraform destroy
root@ip-172-31-14-52:/home/ubuntu/terra# terraform destroy --auto-approve
aws_instance.instance1: Refreshing state... [id=i-0595f9c32521d6dff]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_instance.instance1 will be destroyed
  - resource "aws_instance" "instance1" {
      - ami                                  = "ami-0e386fa0b67b8b12c" -> null
      - arn                                  = "arn:aws:ec2:ap-south-2:940482409885:instance/i-0595f9c32521d6dff" -> null
      - associate_public_ip_address          = true -> null
      - availability_zone                    = "ap-south-2a" -> null
      - cpu_core_count                       = 1 -> null
      - cpu_threads_per_core                 = 2 -> null
      - disable_api_stop                     = false -> null
      - disable_api_termination              = false -> null
      - ebs_optimized                        = true -> null
      - get_password_data                    = false -> null
      - hibernation                          = false -> null
      - id                                   = "i-0595f9c32521d6dff" -> null
      - instance_initiated_shutdown_behavior = "stop" -> null
      - instance_state                       = "running" -> null
      - instance_type                        = "t3.micro" -> null
      - ipv6_address_count                   = 0 -> null
      - ipv6_addresses                       = [] -> null
      - monitoring                           = false -> null
      - placement_partition_number           = 0 -> null
      - primary_network_interface_id         = "eni-0454bb30e27e2852a" -> null
      - private_dns                          = "ip-172-31-14-116.ap-south-2.compute.internal" -> null
      - private_ip                           = "172.31.14.116" -> null
      - public_dns                           = "ec2-18-61-163-32.ap-south-2.compute.amazonaws.com" -> null
      - public_ip                            = "18.61.163.32" -> null
      - secondary_private_ips                = [] -> null
      - security_groups                      = [
          - "default",
        ] -> null
      - source_dest_check                    = true -> null
      - subnet_id                            = "subnet-00a5d0e907595f0b0" -> null
      - tags                                 = {} -> null
      - tags_all                             = {} -> null
      - tenancy                              = "default" -> null
      - user_data_replace_on_change          = false -> null
      - vpc_security_group_ids               = [
          - "sg-0fc9ba79c45de7eb3",
        ] -> null
        # (8 unchanged attributes hidden)

      - capacity_reservation_specification {
          - capacity_reservation_preference = "open" -> null
        }

      - cpu_options {
          - core_count       = 1 -> null
          - threads_per_core = 2 -> null
            # (1 unchanged attribute hidden)
        }

      - credit_specification {
          - cpu_credits = "unlimited" -> null
        }

      - enclave_options {
          - enabled = false -> null
        }

      - maintenance_options {
          - auto_recovery = "default" -> null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_protocol_ipv6          = "disabled" -> null
          - http_put_response_hop_limit = 2 -> null
          - http_tokens                 = "required" -> null
          - instance_metadata_tags      = "disabled" -> null
        }

      - private_dns_name_options {
          - enable_resource_name_dns_a_record    = false -> null
          - enable_resource_name_dns_aaaa_record = false -> null
          - hostname_type                        = "ip-name" -> null
        }

      - root_block_device {
          - delete_on_termination = true -> null
          - device_name           = "/dev/sda1" -> null
          - encrypted             = false -> null
          - iops                  = 3000 -> null
          - tags                  = {} -> null
          - tags_all              = {} -> null
          - throughput            = 125 -> null
          - volume_id             = "vol-038e0eebc56f469ca" -> null
          - volume_size           = 8 -> null
          - volume_type           = "gp3" -> null
            # (1 unchanged attribute hidden)
        }
    }

Plan: 0 to add, 0 to change, 1 to destroy.
aws_instance.instance1: Destroying... [id=i-0595f9c32521d6dff]
aws_instance.instance1: Still destroying... [id=i-0595f9c32521d6dff, 00m10s elapsed]
aws_instance.instance1: Still destroying... [id=i-0595f9c32521d6dff, 00m20s elapsed]
aws_instance.instance1: Still destroying... [id=i-0595f9c32521d6dff, 00m30s elapsed]
aws_instance.instance1: Destruction complete after 39s

Destroy complete! Resources: 1 destroyed.
